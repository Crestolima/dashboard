{"ast":null,"code":"var _jsxFileName = \"/home/crestolima/Documents/t1/dashboard/src/components/barchart/Barchart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport \"./barchart.scss\";\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Barchart() {\n  _s();\n  const chartRef = useRef(null);\n  const [view, setView] = useState('monthly'); // State for the selected view\n\n  const monthlyData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n    datasets: [{\n      label: 'Monthly Earnings',\n      data: [2000, 3000, 2500, 3500, 4000, 2800, 4500, 1000, 2000, 3000, 1000, 5000],\n      backgroundColor: 'rgba(255, 228, 181, 0.5)',\n      hoverBackgroundColor: 'rgba(128, 0, 0, 0.5)',\n      borderWidth: 0\n    }]\n  };\n  const quarterlyData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n    datasets: [{\n      label: 'Quarterly Earnings',\n      data: monthlyData.datasets[0].data.map(value => value / 4),\n      backgroundColor: 'rgba(255, 228, 181, 0.5)',\n      hoverBackgroundColor: 'rgba(128, 0, 0, 0.5)',\n      borderWidth: 0\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        display: true,\n        beginAtZero: false,\n        // Remove the x-axis line starting from 0\n        grid: {\n          display: false\n        },\n        ticks: {\n          display: true\n        }\n      },\n      y: {\n        display: false\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      }\n    }\n  };\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const context = chartRef.current.getContext('2d');\n      const dataToUse = view === 'monthly' ? monthlyData : quarterlyData;\n      const newChart = new Chart(context, {\n        type: 'bar',\n        data: dataToUse,\n        options: options\n      });\n      return () => {\n        newChart.destroy();\n      };\n    }\n  }, [view]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"barchart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"al\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"chart-dropdown\",\n        style: {\n          outline: 'none',\n          backgroundColor: 'white'\n        },\n        onChange: e => setView(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"monthly\",\n          children: \"Monthly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"quarterly\",\n          children: \"Quarterly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jc\",\n      children: \"Monthly Earnings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart1\",\n      style: {\n        height: '350px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Barchart, \"81fydMb8Jl1uPrJKWBsF00sRp6k=\");\n_c = Barchart;\nexport default Barchart;\nvar _c;\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","Barchart","_s","chartRef","view","setView","monthlyData","labels","datasets","label","data","backgroundColor","hoverBackgroundColor","borderWidth","quarterlyData","map","value","options","scales","x","display","beginAtZero","grid","ticks","y","plugins","legend","current","context","getContext","dataToUse","newChart","type","destroy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","outline","onChange","e","target","height","ref","_c","$RefreshReg$"],"sources":["/home/crestolima/Documents/t1/dashboard/src/components/barchart/Barchart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport \"./barchart.scss\";\nimport Chart from 'chart.js/auto';\n\nfunction Barchart() {\n  const chartRef = useRef(null);\n  const [view, setView] = useState('monthly'); // State for the selected view\n\n  const monthlyData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n    datasets: [\n      {\n        label: 'Monthly Earnings',\n        data: [2000, 3000, 2500, 3500, 4000, 2800, 4500,1000,2000,3000,1000,5000],\n        backgroundColor: 'rgba(255, 228, 181, 0.5)',\n        hoverBackgroundColor: 'rgba(128, 0, 0, 0.5)',\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  const quarterlyData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n    datasets: [\n      {\n        label: 'Quarterly Earnings',\n        data: monthlyData.datasets[0].data.map(value => value / 4),\n        backgroundColor: 'rgba(255, 228, 181, 0.5)',\n        hoverBackgroundColor: 'rgba(128, 0, 0, 0.5)',\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      x: {\n        display: true,\n        beginAtZero: false, // Remove the x-axis line starting from 0\n        grid: {\n          display: false,\n        },\n        ticks: {\n          display: true,\n        },\n      },\n      y: {\n        display: false,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n  \n  \n  \n  \n\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const context = chartRef.current.getContext('2d');\n      const dataToUse = view === 'monthly' ? monthlyData : quarterlyData;\n      const newChart = new Chart(context, {\n        type: 'bar',\n        data: dataToUse,\n        options: options,\n      });\n\n      return () => {\n        newChart.destroy();\n      };\n    }\n  }, [view]);\n\n  return (\n    <div className='barchart'>\n    <div className='al'><h2>Overview</h2><select\n    className=\"chart-dropdown\"\n    style={{ outline: 'none', backgroundColor: 'white' }}\n    onChange={(e) => setView(e.target.value)}\n  >\n    <option value=\"monthly\">Monthly</option>\n    <option value=\"quarterly\">Quarterly</option>\n  </select></div>\n  <div className='jc'>Monthly Earnings</div>\n      \n      \n      <div className=\"chart1\" style={{ height: '350px' }}>\n        <canvas ref={chartRef}></canvas>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default Barchart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}