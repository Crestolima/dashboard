{"ast":null,"code":"var _jsxFileName = \"/home/crestolima/Documents/t1/dashboard/src/components/barchart/Barchart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport \"./barchart.scss\";\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Barchart() {\n  _s();\n  const chartRef = useRef(null);\n  const [view, setView] = useState('monthly'); // State for the selected view\n\n  const monthlyData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n    datasets: [{\n      label: 'Monthly Earnings',\n      data: [2000, 3000, 2500, 3500, 4000, 2800, 4500, 1000, 2000, 3000, 1000, 5000],\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      hoverBackgroundColor: 'rgba(75, 192, 192, 0.5)',\n      borderWidth: 0\n    }]\n  };\n  const quarterlyData = {\n    labels: ['Q1', 'Q2', 'Q3', 'Q4'],\n    datasets: [{\n      label: 'Quarterly Earnings',\n      data: [7500, 10800, 11300, 7800],\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      hoverBackgroundColor: 'rgba(75, 192, 192, 0.5)',\n      borderWidth: 0\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        display: false\n      },\n      y: {\n        display: false\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      }\n    }\n  };\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const context = chartRef.current.getContext('2d');\n      const dataToUse = view === 'monthly' ? monthlyData : quarterlyData;\n      const newChart = new Chart(context, {\n        type: 'bar',\n        data: dataToUse,\n        options: options\n      });\n      return () => {\n        newChart.destroy();\n      };\n    }\n  }, [view]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"barchart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-options\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"chart-dropdown\",\n        onChange: e => setView(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"monthly\",\n          children: \"Monthly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"quarterly\",\n          children: \"Quarterly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart1\",\n      style: {\n        height: '350px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Barchart, \"81fydMb8Jl1uPrJKWBsF00sRp6k=\");\n_c = Barchart;\nexport default Barchart;\nvar _c;\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","Barchart","_s","chartRef","view","setView","monthlyData","labels","datasets","label","data","backgroundColor","hoverBackgroundColor","borderWidth","quarterlyData","options","scales","x","display","y","plugins","legend","current","context","getContext","dataToUse","newChart","type","destroy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","style","height","ref","_c","$RefreshReg$"],"sources":["/home/crestolima/Documents/t1/dashboard/src/components/barchart/Barchart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport \"./barchart.scss\";\nimport Chart from 'chart.js/auto';\n\nfunction Barchart() {\n  const chartRef = useRef(null);\n  const [view, setView] = useState('monthly'); // State for the selected view\n\n  const monthlyData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n    datasets: [\n      {\n        label: 'Monthly Earnings',\n        data: [2000, 3000, 2500, 3500, 4000, 2800, 4500,1000,2000,3000,1000,5000],\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        hoverBackgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  const quarterlyData = {\n    labels: ['Q1', 'Q2', 'Q3', 'Q4'],\n    datasets: [\n      {\n        label: 'Quarterly Earnings',\n        data: [7500, 10800, 11300, 7800],\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        hoverBackgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const context = chartRef.current.getContext('2d');\n      const dataToUse = view === 'monthly' ? monthlyData : quarterlyData;\n      const newChart = new Chart(context, {\n        type: 'bar',\n        data: dataToUse,\n        options: options,\n      });\n\n      return () => {\n        newChart.destroy();\n      };\n    }\n  }, [view]);\n\n  return (\n    <div className='barchart'>\n    <h2>Overview</h2>\n      <div className=\"chart-options\">\n        <select className=\"chart-dropdown\" onChange={(e) => setView(e.target.value)}>\n          <option value=\"monthly\">Monthly</option>\n          <option value=\"quarterly\">Quarterly</option>\n        </select>\n      </div>\n      \n      <div className=\"chart1\" style={{ height: '350px' }}>\n        <canvas ref={chartRef}></canvas>\n      </div>\n    </div>\n  );\n}\n\nexport default Barchart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}