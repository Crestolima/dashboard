{"ast":null,"code":"var _jsxFileName = \"/home/crestolima/Documents/t1/dashboard/src/components/barchart/Barchart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport \"./barchart.scss\";\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Barchart() {\n  _s();\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState({\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n    datasets: [{\n      label: 'Monthly Earnings',\n      data: [2000, 3000, 2500, 3500, 4000, 2800, 4500],\n      // backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      hoverBackgroundColor: 'rgba(75, 192, 192, 0.5)',\n      borderColor: 'rgba(75, 192, 192, 0.2)',\n      borderWidth: 0\n    }]\n  });\n  const options = {\n    scales: {\n      x: {\n        display: true // Hide x-axis\n      },\n\n      y: {\n        display: false // Hide y-axis\n      }\n    },\n\n    plugins: {\n      legend: {\n        display: false // Hide the legend\n      }\n    }\n  };\n\n  // Create the chart when the component mounts\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const context = chartRef.current.getContext('2d');\n      const newChart = new Chart(context, {\n        type: 'bar',\n        data: chartData,\n        options: options\n      });\n\n      // Ensure the chart is destroyed when the component unmounts\n      return () => {\n        newChart.destroy();\n      };\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"barchart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart1\",\n      style: {\n        height: '380px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Barchart, \"5z57HxZDaVmF1/eB/Cu+5tEtWpk=\");\n_c = Barchart;\nexport default Barchart;\nvar _c;\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Bar","Chart","jsxDEV","_jsxDEV","Barchart","_s","chartRef","chartData","setChartData","labels","datasets","label","data","hoverBackgroundColor","borderColor","borderWidth","options","scales","x","display","y","plugins","legend","current","context","getContext","newChart","type","destroy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","ref","_c","$RefreshReg$"],"sources":["/home/crestolima/Documents/t1/dashboard/src/components/barchart/Barchart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport \"./barchart.scss\";\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\n\nfunction Barchart() {\n  const chartRef = useRef(null);\n\n  const [chartData, setChartData] = useState({\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n    datasets: [\n      {\n        label: 'Monthly Earnings',\n        data: [2000, 3000, 2500, 3500, 4000, 2800, 4500],\n        // backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        hoverBackgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderColor: 'rgba(75, 192, 192, 0.2)',\n        borderWidth: 0,\n      },\n    ],\n  });\n\n  const options = {\n    scales: {\n      x: {\n        display: true, // Hide x-axis\n      },\n      y: {\n        display: false, // Hide y-axis\n      },\n    },\n    plugins: {\n      legend: {\n        display: false, // Hide the legend\n      },\n    },\n  };\n\n  // Create the chart when the component mounts\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const context = chartRef.current.getContext('2d');\n      const newChart = new Chart(context, {\n        type: 'bar',\n        data: chartData,\n        options: options,\n      });\n\n      // Ensure the chart is destroyed when the component unmounts\n      return () => {\n        newChart.destroy();\n      };\n    }\n  }, [chartData]);\n\n  return (\n    <div className='barchart'>\n      <h2>Overview</h2>\n      <div className=\"chart1\" style={{ height: '380px' }}>\n        <canvas ref={chartRef}></canvas>\n      </div>\n    </div>\n  );\n}\n\nexport default Barchart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,iBAAiB;AACxB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC;IACzCU,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAC7FC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,kBAAkB;MACzBC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAChD;MACAC,oBAAoB,EAAE,yBAAyB;MAC/CC,WAAW,EAAE,yBAAyB;MACtCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,OAAO,EAAE,IAAI,CAAE;MACjB,CAAC;;MACDC,CAAC,EAAE;QACDD,OAAO,EAAE,KAAK,CAAE;MAClB;IACF,CAAC;;IACDE,OAAO,EAAE;MACPC,MAAM,EAAE;QACNH,OAAO,EAAE,KAAK,CAAE;MAClB;IACF;EACF,CAAC;;EAED;EACAtB,SAAS,CAAC,MAAM;IACd,IAAIS,QAAQ,IAAIA,QAAQ,CAACiB,OAAO,EAAE;MAChC,MAAMC,OAAO,GAAGlB,QAAQ,CAACiB,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;MACjD,MAAMC,QAAQ,GAAG,IAAIzB,KAAK,CAACuB,OAAO,EAAE;QAClCG,IAAI,EAAE,KAAK;QACXf,IAAI,EAAEL,SAAS;QACfS,OAAO,EAAEA;MACX,CAAC,CAAC;;MAEF;MACA,OAAO,MAAM;QACXU,QAAQ,CAACE,OAAO,CAAC,CAAC;MACpB,CAAC;IACH;EACF,CAAC,EAAE,CAACrB,SAAS,CAAC,CAAC;EAEf,oBACEJ,OAAA;IAAK0B,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvB3B,OAAA;MAAA2B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB/B,OAAA;MAAK0B,SAAS,EAAC,QAAQ;MAACM,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAN,QAAA,eACjD3B,OAAA;QAAQkC,GAAG,EAAE/B;MAAS;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7B,EAAA,CA1DQD,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AA4DjB,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}