{"ast":null,"code":"var _jsxFileName = \"/home/crestolima/Documents/t1/dashboard/src/components/barchart/Barchart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport \"./barchart.scss\";\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Barchart() {\n  _s();\n  const chartRef = useRef(null);\n  const [view, setView] = useState('monthly');\n  const monthlyData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n    datasets: [{\n      label: 'Monthly Earnings',\n      data: [2000, 3000, 2500, 3500, 4000, 2800, 4500, 1000, 2000, 3000, 1000, 5000],\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      hoverBackgroundColor: 'rgba(75, 192, 192, 0.5)',\n      borderWidth: 0\n    }]\n  };\n  const quarterlyData = {\n    labels: ['Q1', 'Q2', 'Q3', 'Q4'],\n    datasets: [{\n      label: 'Quarterly Earnings',\n      data: [monthlyData.datasets[0].data.slice(0, 3).reduce((sum, value) => sum + value, 0), monthlyData.datasets[0].data.slice(3, 6).reduce((sum, value) => sum + value, 0), monthlyData.datasets[0].data.slice(6, 9).reduce((sum, value) => sum + value, 0), monthlyData.datasets[0].data.slice(9, 12).reduce((sum, value) => sum + value, 0)],\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      hoverBackgroundColor: 'rgba(75, 192, 192, 0.5)',\n      borderWidth: 0\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        display: false\n      },\n      y: {\n        display: false\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 10 // Adjust as needed to create space for labels\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const context = chartRef.current.getContext('2d');\n      const dataToUse = view === 'monthly' ? monthlyData : quarterlyData;\n      const newChart = new Chart(context, {\n        type: 'bar',\n        data: dataToUse,\n        options: options\n      });\n      return () => {\n        newChart.destroy();\n      };\n    }\n  }, [view]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"barchart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"al\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"chart-dropdown\",\n        onChange: e => setView(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"monthly\",\n          children: \"Monthly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"quarterly\",\n          children: \"Quarterly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart1\",\n      style: {\n        height: '350px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Barchart, \"81fydMb8Jl1uPrJKWBsF00sRp6k=\");\n_c = Barchart;\nexport default Barchart;\nvar _c;\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","Barchart","_s","chartRef","view","setView","monthlyData","labels","datasets","label","data","backgroundColor","hoverBackgroundColor","borderWidth","quarterlyData","slice","reduce","sum","value","options","scales","x","display","y","plugins","legend","layout","padding","left","right","top","bottom","current","context","getContext","dataToUse","newChart","type","destroy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","style","height","ref","_c","$RefreshReg$"],"sources":["/home/crestolima/Documents/t1/dashboard/src/components/barchart/Barchart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport \"./barchart.scss\";\nimport Chart from 'chart.js/auto';\n\nfunction Barchart() {\n  const chartRef = useRef(null);\n  const [view, setView] = useState('monthly');\n\n  const monthlyData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\n    datasets: [\n      {\n        label: 'Monthly Earnings',\n        data: [2000, 3000, 2500, 3500, 4000, 2800, 4500, 1000, 2000, 3000, 1000, 5000],\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        hoverBackgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  const quarterlyData = {\n    labels: ['Q1', 'Q2', 'Q3', 'Q4'],\n    datasets: [\n      {\n        label: 'Quarterly Earnings',\n        data: [\n          monthlyData.datasets[0].data.slice(0, 3).reduce((sum, value) => sum + value, 0),\n          monthlyData.datasets[0].data.slice(3, 6).reduce((sum, value) => sum + value, 0),\n          monthlyData.datasets[0].data.slice(6, 9).reduce((sum, value) => sum + value, 0),\n          monthlyData.datasets[0].data.slice(9, 12).reduce((sum, value) => sum + value, 0)\n        ],\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        hoverBackgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 10, // Adjust as needed to create space for labels\n      },\n    },\n  };\n\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const context = chartRef.current.getContext('2d');\n      const dataToUse = view === 'monthly' ? monthlyData : quarterlyData;\n      const newChart = new Chart(context, {\n        type: 'bar',\n        data: dataToUse,\n        options: options,\n      });\n\n      return () => {\n        newChart.destroy();\n      };\n    }\n  }, [view]);\n\n  return (\n    <div className='barchart'>\n      <div className='al'>\n        <h2>Overview</h2>\n        <select className=\"chart-dropdown\" onChange={(e) => setView(e.target.value)}>\n          <option value=\"monthly\">Monthly</option>\n          <option value=\"quarterly\">Quarterly</option>\n        </select>\n      </div>\n      \n      <div className=\"chart1\" style={{ height: '350px' }}>\n        <canvas ref={chartRef}></canvas>\n      </div>\n    </div>\n  );\n}\n\nexport default Barchart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}